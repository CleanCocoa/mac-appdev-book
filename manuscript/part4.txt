# Part 4: Using Core Data for Convenience

Finally, after all we have achieved, I explore how to use Core Data managed objects the way Apple meant them to be used: woven deeply into the core of our application.

Until now, we've avoided this with utmost caution. Let's see how bad it'll be if we turn to the _Dark Side._

`NSManagedObject` exposes more than 20 methods and nearly 10 properties. None of these are relevant for the rest of our application save the repository.

During the rest of this book, I've tried to build the application as much "bottom up" as possible, given that I knew which persistence mechanism I was going to use. The notion of a Domain Model is, in essence, the abstraction of everything that has to do with the infrastructure and user interface APIs. I like that. Working with code in isolation is very rewarding: everything is under your control.

Now, I'm going to put the Core Data managed objects first and see what I can do to keep the app well managed and the meager business logic isolated.

I keep track of progress in a separate branch called [`core-data-only`](https://github.com/DivineDominion/mac-appdev-code/tree/core-data-only).
