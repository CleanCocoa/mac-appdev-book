# Further Reading

## Interesting Links

You should really check out the following:

SourceView sample code (Objective-C)
:   <https://developer.apple.com/library/mac/samplecode/SourceView/Listings/BaseNode_m.html#//apple_ref/doc/uid/DTS10004441-BaseNode_m-DontLinkElementID_6>
:   Example application by Apple where `NSOutlineView` is used. Good for getting started, although the example app doesn't run properly anymore -- I don't see any images in the source view.

Clean Architecture
: <http://blog.8thlight.com/uncle-bob/2012/08/13/the-clean-architecture.html>
: <http://blog.8thlight.com/uncle-bob/2011/11/22/Clean-Architecture.html>
: Uncle Bob's explanation of the architectural concepts I tried to adhere to. Goes beyond Hex

Uncle Bob: Architecture -- The Lost Years (Video)
: <https://www.youtube.com/watch?v=WpkDN78P884>
: This talk introduced me to Hexagonal and Clean Architecture.

Jim Gay: Clean (Ruby) Code
: Video: [East-Oriented Code](http://confreaks.com/videos/4825-RubyConf2014-eastward-ho-a-clear-path-through-ruby-with-oo) at RubyConf 2014
: Book: ["Clean Ruby"](http://clean-ruby.com) -- full of good examples which you can apply to Swift, too, and even more so to Objective-C and its meta-programming capabilities.

Avdi Grimm: Objects on Rails
: <http://objectsonrails.com>
: A free e-book which taught me how to decouple my application from Ruby on Rails. This one got me hooked on thinking past using the framework properly.

Other links of interest on the topic of software architecture:

* [What service objects are not](https://medium.com/@KamilLelonek/what-service-objects-are-not-7abef8aa2f99) (Ruby)